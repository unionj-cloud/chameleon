/**
* Generated by go-doudou v2.2.1.
* You can edit it as your need.
 */
package plugin

import (
	"github.com/go-mysql-org/go-mysql/canal"
	"github.com/unionj-cloud/chameleon/config"
	"github.com/unionj-cloud/chameleon/internal/handlers"
	"github.com/unionj-cloud/go-doudou/v2/toolkit/zlogger"
	"os"

	"github.com/unionj-cloud/go-doudou/v2/framework/grpcx"
	"github.com/unionj-cloud/go-doudou/v2/framework/plugin"
	"github.com/unionj-cloud/go-doudou/v2/framework/rest"
	"github.com/unionj-cloud/go-doudou/v2/toolkit/pipeconn"
	"github.com/unionj-cloud/go-doudou/v2/toolkit/stringutils"
)

var _ plugin.ServicePlugin = (*CanalPlugin)(nil)

type CanalPlugin struct {
}

func (receiver *CanalPlugin) Close() {
}

func (receiver *CanalPlugin) GoDoudouServicePlugin() {

}

func (receiver *CanalPlugin) GetName() string {
	name := os.Getenv("GDD_SERVICE_NAME")
	if stringutils.IsEmpty(name) {
		name = "com.hundsun.ecod.canal"
	}
	return name
}

func (receiver *CanalPlugin) Initialize(_ *rest.RestServer, _ *grpcx.GrpcServer, _ pipeconn.DialContextFunc) {
	conf := config.LoadFromEnv()
	cfg := canal.NewDefaultConfig()
	cfg.Addr = conf.Source.Addr
	cfg.User = conf.Source.User
	cfg.Password = conf.Source.Pass
	// We only care table canal_test in test db
	//cfg.Dump.TableDB = "xxx"
	//cfg.Dump.Tables = []string{"xxx"}
	cfg.IncludeTableRegex = conf.Source.IncludeTableRegex

	c, err := canal.NewCanal(cfg)
	if err != nil {
		zlogger.Fatal().Msg(err.Error())
	}

	eventHandler := handlers.NewVastbaseEventHandler(conf, c)
	// Register a handler to handle RowsEvent
	c.SetEventHandler(eventHandler)

	pos, err := c.GetMasterPos()
	if err != nil {
		zlogger.Fatal().Msg(err.Error())
	}

	// Start canal
	// 设置了同步起始位置则跳过dump，直接做增量同步
	go func() {
		if err := c.RunFrom(pos); err != nil {
			panic(err)
		}
	}()
}

func init() {
	plugin.RegisterServicePlugin(&CanalPlugin{})
}
